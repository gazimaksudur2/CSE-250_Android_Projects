All android courses

https://developer.android.com/courses

Ctrl+Alt+Shift+S ---> to open the project structure dialog to view and edit your project configuration



Task done activity-----------------------------------------------------

package com.example.sticky_notes;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.material.floatingactionbutton.FloatingActionButton;

import java.util.ArrayList;

public class TaskDoneActivity extends MainActivity {
    private ImageView empty_imageview;
    private TextView no_data;
    RecyclerView recyclerView;
    TaskDoneCustomAdapter taskDoneCustomAdapter;
    ArrayList<String> id, date, time, notes, deadline, reminder;
    MyDatabaseHelper myDB;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_task_done);
        recyclerView = findViewById(R.id.recyclerView_task);

        empty_imageview = findViewById(R.id.empty_imageview_task);
        no_data = findViewById(R.id.no_data_task);

        myDB = new MyDatabaseHelper(TaskDoneActivity.this);
        id = new ArrayList<>();
        date = new ArrayList<>();
        time = new ArrayList<>();
        notes = new ArrayList<>();
        deadline = new ArrayList<>();
        reminder = new ArrayList<>();

        storeDataInArrays();

        taskDoneCustomAdapter = new TaskDoneCustomAdapter(TaskDoneActivity.this,this, id, date, time, notes, deadline, reminder);
        recyclerView.setAdapter(taskDoneCustomAdapter);
        recyclerView.setLayoutManager(new LinearLayoutManager(TaskDoneActivity.this));
    }

    void storeDataInArrays(){
        Cursor cursor = myDB.readAllData();
        if(cursor.getCount() == 0){
            empty_imageview.setVisibility(View.VISIBLE);
            no_data.setVisibility(View.VISIBLE);
        }else{
            while (cursor.moveToNext()){
                id.add(cursor.getString(0));
                date.add(cursor.getString(1));
                time.add(cursor.getString(2));
                notes.add(cursor.getString(3));
                deadline.add(cursor.getString(4));
                reminder.add(cursor.getString(5));
            }
            empty_imageview.setVisibility(View.GONE);
            no_data.setVisibility(View.GONE);
        }
    }

    void addBook(String id, String date, String time, String note, String deadline, String reminder){
        NoteAddTaskDone noteAddTaskDone = new NoteAddTaskDone(TaskDoneActivity.this,id,date,time,note,deadline,reminder);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.my_menu, menu);
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if(item.getItemId() == R.id.delete_all){
            confirmDialog();
        }
        return super.onOptionsItemSelected(item);
    }

    void confirmDialog(){
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("Delete All?");
        builder.setMessage("Are you sure to delete all Note from task done?");
        builder.setPositiveButton("Yes", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                MyDatabaseHelper myDB = new MyDatabaseHelper(TaskDoneActivity.this);
                myDB.deleteAllData();
                //Refresh Activity
                Intent intent = new Intent(TaskDoneActivity.this, MainActivity.class);
                startActivity(intent);
                finish();
            }
        });
        builder.setNegativeButton("No", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                Toast.makeText(TaskDoneActivity.this, "Nothing Done!!", Toast.LENGTH_SHORT).show();
            }
        });
        builder.create().show();
    }

}


TaskDoneCustomholder-----------------------------------------------


package com.example.sticky_notes;

import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Build;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AlertDialog;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;

public class TaskDoneCustomAdapter extends RecyclerView.Adapter<TaskDoneCustomAdapter.MyViewHolder_task>{

    private Context context;
    private Activity activity;
    private ArrayList note_id, note_date, note_time, note_txt, note_deadline, note_reminder;
    static String a,b,c,d,e,f;

    TaskDoneCustomAdapter(Activity activity, Context context, ArrayList note_id, ArrayList note_date, ArrayList note_time,
                          ArrayList note_txt, ArrayList note_deadline, ArrayList note_reminder){
        this.activity = activity;
        this.context = context;
        this.note_id = note_id;
        this.note_date = note_date;
        this.note_time = note_time;
        this.note_txt = note_txt;
        this.note_deadline = note_deadline;
        this.note_reminder = note_reminder;
    }

    TaskDoneCustomAdapter(){}

    @NonNull
    @Override
    public MyViewHolder_task onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        LayoutInflater inflater = LayoutInflater.from(context);
        View view = inflater.inflate(R.layout.noteview_task_done, parent, false);
        return new MyViewHolder_task(view);
    }

    @RequiresApi(api = Build.VERSION_CODES.M)
    @Override
    public void onBindViewHolder(@NonNull final MyViewHolder_task holder, final int position) {
        holder.note_id_txt.setText(String.valueOf(note_id.get(position)));
        holder.note_date_txt.setText(String.valueOf(note_date.get(position)));
        holder.note_time_txt.setText(String.valueOf(note_time.get(position)));
        holder.note_passage_txt.setText(String.valueOf(note_txt.get(position)));
        holder.note_deadline_txt.setText(String.valueOf(note_deadline.get(position)));
        holder.note_reminder_txt.setText(String.valueOf(note_reminder.get(position)));
        holder.mainLayout.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                a = String.valueOf(note_id.get(position));
                b = String.valueOf(note_date.get(position));
                c = String.valueOf(note_time.get(position));
                d = String.valueOf(note_txt.get(position));
                e = String.valueOf(note_deadline.get(position));
                f = String.valueOf(note_reminder.get(position));
//                Toast.makeText(context, "Passage is: "+d, Toast.LENGTH_SHORT).show();
                confirmDialog();
            }
        });
    }

    void confirmDialog(){
        AlertDialog.Builder builder = new AlertDialog.Builder(context);
        builder.setTitle("Delete " + d + " ?");
        builder.setMessage("Are you sure you want to delete " + d + " ?");
        builder.setPositiveButton("Yes", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                MyDatabaseHelper myDB = new MyDatabaseHelper(context);
                myDB.deleteOneRow(a);
            }
        });
        builder.setNegativeButton("No", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialogInterface, int i) {
                Toast.makeText(context, "Nothing Deleted!!", Toast.LENGTH_SHORT).show();
            }
        });
        builder.create().show();
    }

    @Override
    public int getItemCount() {
        return note_id.size();
    }

    class MyViewHolder_task extends RecyclerView.ViewHolder {

        TextView note_id_txt, note_date_txt, note_time_txt, note_passage_txt, note_deadline_txt, note_reminder_txt;
        LinearLayout mainLayout;

        MyViewHolder_task(@NonNull View itemView) {
            super(itemView);
            note_id_txt = itemView.findViewById(R.id.id);
            note_date_txt = itemView.findViewById(R.id.date);
            note_time_txt = itemView.findViewById(R.id.time);
            note_passage_txt = itemView.findViewById(R.id.notes);
            note_deadline_txt = itemView.findViewById(R.id.deadline);
            note_reminder_txt = itemView.findViewById(R.id.reminder);
            mainLayout = itemView.findViewById(R.id.mainLayout_task_done);

            //Animate Recyclerview
            Animation translate_anim = AnimationUtils.loadAnimation(context, R.anim.translate_anime);
            mainLayout.setAnimation(translate_anim);
        }

    }

}



NoteAddTaskDone--------------------------------------------------------

package com.example.sticky_notes;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.widget.Toast;

public class NoteAddTaskDone extends MainActivity {
    String id, date, time, passage, deadline, reminder;
    Context context;

    NoteAddTaskDone(Context context, String id, String date, String time, String note, String deadline, String reminder){
        this.id = id;
        this.date = date;
        this.time = time;
        this.passage = note;
        this.deadline = deadline;
        this.reminder = reminder;
    }
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

//        openDialog(NoteAddTaskDone.this);
        MyDatabaseHelper myDB = new MyDatabaseHelper(context);
        if(date.isEmpty() || time.isEmpty() || passage.isEmpty() || deadline.isEmpty() || reminder.isEmpty()){
            Toast.makeText(NoteAddTaskDone.this, "Please enter valid info!!", Toast.LENGTH_SHORT).show();
            finish();return;
        }

        myDB.addBook(date, time, passage, deadline, reminder);
        Intent intent = new Intent(NoteAddTaskDone.this, MainActivity.class);
        startActivity(intent);
        finish();
    }
}